//input :n, natural number;


//output :S ,where S=Sum(an) where an = P(n)  P(n)- is prime number row (Pn|b*c implicates P(n) | b or P(n) |c)

//Presupun ca toate s prime
n=10;
a = [1 | i from [1..n*n]];
//n va primi o valoare de test;
//Luam in calcul valorile de la 0;
i=2;
a[1]=0;
a[0]=0;
//Vom face ciurul lui Erathosthene iar valoarea i intr-adevar poate fi aleasa sa se duca spre o valoare cu o eraoare cat mai mica fata de P(n),astfel incat sa avem primele N numere prime in acel interval.
while (i< (n*n))
{
  if(a[i]==1)
    {
      for(j=i+i;j<=n*n;j=j+i)
      {
        a[j]=0; // nu este prim ca e multiplu de i;
      }
    }
   i++;
}
s=0;
cnt=0;
for(i=0;i<=n*n && cnt < n;i++)
 {
   if(a[i]==1)
  { cnt++;
    s=s+i;
  }

 }
 if(n==1)
 s=2; 
print(s); //  [3, 5, 5, 4]
